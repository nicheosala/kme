openapi: 3.0.3
info:
  title: Key Management Entity
  description: This is a **sample** Key Management Entity.
  contact:
    email: nicolo4.sala@mail.polimi.it
  version: 0.0.1
servers:
  - url: /api/v1/keys
paths:
  /{slave_SAE_ID}/status:
    get:
      summary: Get status
      description: Returns Status from a KME to the calling SAE.
      operationId: get_status
      parameters:
        - name: slave_SAE_ID
          in: path
          description: URL-encoded SAE ID of slave SAE.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "503":
          $ref: "#/components/responses/ServerSideError"
      x-openapi-router-controller: KME.controllers.default_controller
  /{slave_SAE_ID}/enc_keys:
    get:
      summary: Get key
      description:
        Returns Key container data from the KME to the calling master SAE. The calling master SAE may supply
        Key request data to specify the requirement on Key container data. The slave
        SAE specified by the slave_SAE_ID parameter may subsequently request matching
        keys from a remote KME using key_ID identifiers from the returned Key container.
      operationId: get_key
      parameters:
        - name: slave_SAE_ID
          in: path
          description: URL-encoded SAE ID of slave SAE.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: number
          in: query
          description: Number of keys requested, default value is 1
          required: false
          style: form
          explode: true
          schema:
            type: integer
            minimum: 1
        - name: size
          in: query
          description: Size of each key in bits, default value is defined as key_size in Status data format
          required: false
          style: form
          explode: true
          schema:
            type: integer
            minimum: 1
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeyContainer"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "503":
          $ref: "#/components/responses/ServerSideError"
      x-openapi-router-controller: KME.controllers.default_controller
    post:
      summary: Post key
      description:
        Returns Key container data from the KME to the calling master SAE.
        Key container data contains one or more keys. The calling master SAE may supply
        Key request data to specify the requirement on Key container data. The slave
        SAE specified by the slave_SAE_ID parameter may subsequently request matching
        keys from a remote KME using key_ID identifiers from the returned Key container.
      operationId: post_key
      parameters:
        - name: slave_SAE_ID
          in: path
          description: URL-encoded SAE ID of slave SAE.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KeyRequest"
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeyContainer"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "503":
          $ref: "#/components/responses/ServerSideError"
      x-codegen-request-body-name: Key request
      x-openapi-router-controller: KME.controllers.default_controller
  /{master_SAE_ID}/dec_keys:
    get:
      summary: Get key with key IDs
      description:
        Returns Key container from the KME to the calling slave SAE. Key
        container contains keys matching those previously delivered to a remote master
        SAE based on the Key IDs supplied from the remote master SAE in response to
        its call to Get key. The KME shall reject the request with a 401 HTTP status
        code if the SAE ID of the requester was not an SAE ID supplied to the 'Get
        key' method each time it was called resulting in the return of any of the
        Key IDs being requested.
      operationId: get_key_with_key_i_ds
      parameters:
        - name: master_SAE_ID
          in: path
          description: URL-encoded SAE ID of master SAE.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: key_ID
          in: query
          description: single key ID
          required: true
          style: form
          explode: true
          schema:
            $ref: "#/components/schemas/KeyID"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeyContainer"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "503":
          $ref: "#/components/responses/ServerSideError"
      x-openapi-router-controller: KME.controllers.default_controller
    post:
      summary: Post key with key IDs
      description:
        Returns Key container from the KME to the calling slave SAE. Key
        container contains keys matching those previously delivered to a remote master
        SAE based on the Key IDs supplied from the remote master SAE in response to
        its call to Get key. The KME shall reject the request with a 401 HTTP status
        code if the SAE ID of the requester was not an SAE ID supplied to the 'Get
        key' method each time it was called resulting in the return of any of the
        Key IDs being requested.
      operationId: post_key_with_key_i_ds
      parameters:
        - name: master_SAE_ID
          in: path
          description: URL-encoded SAE ID of master SAE.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KeyIDs"
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeyContainer"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "503":
          $ref: "#/components/responses/ServerSideError"
      x-codegen-request-body-name: Key request
      x-openapi-router-controller: KME.controllers.default_controller
components:
  schemas:
    Status:
      description:
        Status contains information on keys available to be requested by a master SAE for a specified slave SAE.
      required:
        - key_size
        - master_SAE_ID
        - max_SAE_ID_count
        - max_key_count
        - max_key_per_request
        - max_key_size
        - min_key_size
        - slave_SAE_ID
        - source_KME_ID
        - stored_key_count
        - target_KME_ID
      type: object
      additionalProperties: false
      properties:
        source_KME_ID:
          type: string
          description: KME ID of the KME
        target_KME_ID:
          type: string
          description: KME ID of the target KME
        master_SAE_ID:
          type: string
          description: SAE ID of the calling master SAE
        slave_SAE_ID:
          type: string
          description: SAE ID of the specified slave SAE
        key_size:
          type: integer
          description: Default size of key the KME can deliver to the SAE (in bit)
        stored_key_count:
          type: integer
          description: Number of stored keys KME can deliver to the SAE
        max_key_count:
          type: integer
          description: Maximum number of stored_key_count
        max_key_per_request:
          type: integer
          description: Maximum number of keys per request
        max_key_size:
          type: integer
          description: Maximum size of key the KME can deliver to the SAE (in bit)
        min_key_size:
          type: integer
          description: Minimum size of key the KME can deliver to the SAE (in bit)
        max_SAE_ID_count:
          type: integer
          description:
            Maximum number of additional_slave_SAE_IDs the KME allows.
            '0' when the KME does not support key multicast
          default: 0
        status_extension:
          type: object
          properties: { }
          description: (Option) for future use
      example:
        source_KME_ID: AAAABBBBCCCCDDDD
        target_KME_ID: EEEEFFFFGGGGHHHH
        master_SAE_ID: IIIIJJJJKKKKLLLL
        slave_SAE_ID: MMMMNNNNOOOOPPPP
        key_size: 352
        stored_key_count: 25000
        max_key_count: 100000
        max_key_per_request: 128
        max_key_size: 1024
        min_key_size: 64
        max_SAE_ID_count: 0
    KeyRequest:
      description:
        Key request data format is used for a request data model of API "Get key" method.
      type: object
      additionalProperties: false
      properties:
        number:
          type: integer
          description: (Option) number of keys requested, default value is 1
          default: 1
          minimum: 1
        size:
          type: integer
          description:
            (Option) Size of each key in bits, default value is defined
            as key_size in Status data format
          minimum: 1
        additional_slave_SAE_IDs:
          type: array
          description:
            (Option) Array of IDs of slave SAEs. It is used for specifying
            two or more slave SAEs to share identical keys. The maximum number of
            IDs is defined as max_SAE_ID_count in Status data format.
          items:
            type: string
        extension_mandatory:
          type: array
          description:
            (Option) Array of extension parameters specified as name/value
            pairs that KME shall handle or return an error. Parameter values may
            be of any type, including objects.
          items:
            type: object
            properties: { }
        extension_optional:
          type: array
          description:
            (Option) Array of extension parameters specified as name/value
            pairs that KME may ignore. Parameter values may be of any type, including objects.
          items:
            type: object
            properties: { }
      example:
        number: 1
        size: 4096
        additional_slave_SAE_IDs:
          - ABCDEFG
          - HIJKLMN
    KeyIDs:
      description: Key IDs data format is used for a request data model of API "Get key with key IDs" method.
      type: object
      required:
        - key_IDs
      additionalProperties: false
      properties:
        key_IDs:
          type: array
          description: Array of key IDs
          items:
            $ref: "#/components/schemas/KeyIDs_key_IDs"
        key_IDs_extension:
          type: object
          properties: { }
          description: (Option) for future use
      example:
        key_IDs:
          - key_ID: bc490419-7d60-487f-adc1-4ddcc177c139
          - key_ID: 0a782fb5-3434-48fe-aa4d-14f41d46cf92
          - key_ID: 64a7e9a2-269c-4b2c-832c-5351f3ac5adb
          - key_ID: 550e8400-e29b-41d4-a716-446655440000
    KeyContainer:
      description:
        Key container data format is used for a response data model of API "Get key" method and
        "Get key with key IDs" method.
      required:
        - keys
      type: object
      additionalProperties: false
      properties:
        keys:
          type: array
          items:
            $ref: "#/components/schemas/Key"
        key_container_extension:
          type: object
          properties: { }
          description: (Option) for future use
      example:
        keys:
          - key: wHHVxRwDJs3/bXd38GHP3oe4svTuRpZS0yCC7x4Ly+s=
            key_ID: bc490419-7d60-487f-adc1-4ddcc177c139
          - key: OeGMPxh1+2RpJpNCYixWHFLYRubpOKCw94FcCI7VdJA=
            key_ID: 0a782fb5-3434-48fe-aa4d-14f41d46cf92
          - key: 479G1Osfljpmfa5vn24tdzE5zqv5CafkGxYrLCk8384=
            key_ID: 64a7e9a2-269c-4b2c-832c-5351f3ac5adb
          - key: csEMV9KkmjgOPF90uc54+hykhg6iI5GTPHlP9PjgLVU=
            key_ID: 550e8400-e29b-41d4-a716-446655440000
    Key:
      description: Random digital data with an associated universally unique ID.
      required:
        - key
        - key_ID
      type: object
      additionalProperties: false
      properties:
        key_ID:
          $ref: "#/components/schemas/KeyID"
        key_ID_extension:
          type: object
          properties: { }
          description: (Option) for future use
        key:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          description: Key data
          format: base64
          example: OeGMPxh1+2RpJpNCYixWHFLYRubpOKCw94FcCI7VdJA=
        key_extension:
          type: object
          properties: { }
          description: (Option) for future use
      example:
        key: OeGMPxh1+2RpJpNCYixWHFLYRubpOKCw94FcCI7VdJA=
        key_ID: 550e8400-e29b-41d4-a716-446655440000
    KeyID:
      type: string
      description: ID of a key
      format: uuid
      example: 550e8400-e29b-41d4-a716-446655440000
    Error:
      description:
        Error data format is used for an error response data model of API "Get status" method, "Get key" method,
        and "Get key with key IDs" method.
      required:
        - message
      type: object
      additionalProperties: false
      properties:
        message:
          type: string
          description: Error message
        details:
          type: array
          description:
            (Option) Array to supply additional detailed error information
            specified as name/value pairs. Values may be of any type, including objects.
          items:
            type: object
            properties: { }
      example:
        message: Error encountered
    KeyIDs_key_IDs:
      required:
        - key_ID
      type: object
      additionalProperties: false
      properties:
        key_ID:
          $ref: "#/components/schemas/KeyID"
        key_ID_extension:
          type: object
          properties: { }
          description: (Option) for future use
      example:
        key_ID: 550e8400-e29b-41d4-a716-446655440000
  responses:
    BadRequest:
      description: Bad request format
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    ServerSideError:
      description: Server-side error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
